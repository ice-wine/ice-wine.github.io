(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{376:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"js"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js"}},[t._v("#")]),t._v(" JS")]),t._v(" "),a("h2",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),a("h3",{attrs:{id:"组成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#组成"}},[t._v("#")]),t._v(" 组成")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("ECMAScript")]),t._v("（核心）：提供核心语言功能。包括变量、表达式、运算符、函数、if语句、for语句等")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("DOM")]),t._v("（文档对象模型）：提供访问和操作网页内容的方法和接口。比如让盒子移动、变色、改变大小、轮播图等")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("BOM")]),t._v("（浏览器对象模型）：提供与浏览器交互的方法和接口。浏览器窗口，比如弹框、控制浏览器跳转、获取浏览器分辨率等")])])]),t._v(" "),a("h3",{attrs:{id:"特点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#特点"}},[t._v("#")]),t._v(" 特点")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("解释型语言")])]),t._v(" "),a("li",[a("p",[t._v("单线程")])]),t._v(" "),a("li",[a("p",[t._v("ECMAScript标准（ES）")])])]),t._v(" "),a("h3",{attrs:{id:"引用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引用"}},[t._v("#")]),t._v(" 引用")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("行内式")])]),t._v(" "),a("li",[a("p",[t._v("内嵌式")])]),t._v(" "),a("li",[a("p",[t._v("引入外部的 JS 文件")])])]),t._v(" "),a("h2",{attrs:{id:"变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[t._v("#")]),t._v(" 变量")]),t._v(" "),a("h3",{attrs:{id:"概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),a("p",[t._v("在程序在内存中用于存放数据的容器的空间。通过变量名获取数据，修改数据。")]),t._v(" "),a("h3",{attrs:{id:"数据类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型"}},[t._v("#")]),t._v(" 数据类型")]),t._v(" "),a("p",[t._v("JavaScript 是一种「弱类型语言」或「动态语言」。变量的数据类型，是在程序运行的过程中，根据等号右边的值来确定的。")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("基本数据类型")]),t._v("（值类型）：String 字符串、Number 数值、Boolean 布尔值、Null 空值、Undefined 未定义")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("引用数据类型")]),t._v("（引用类型）：Object 对象")])])]),t._v(" "),a("p",[t._v("tips：内置对象 Function、Array、Date、RegExp、Error等都是属于 Object 类型")]),t._v(" "),a("p",[a("strong",[t._v("区别")])]),t._v(" "),a("p",[t._v("基本类型：传数值，因为变量直接保存在栈内存，独立存在")]),t._v(" "),a("p",[t._v("引用类型：传地址，因为对象是保存在堆内存，变量保存了对象的内存地址（对象的引用），保存在栈内存当中")]),t._v(" "),a("h4",{attrs:{id:"字符串-string"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符串-string"}},[t._v("#")]),t._v(" # 字符串：String")]),t._v(" "),a("p",[a("strong",[t._v("转义字符")]),t._v("：加' \\ '。如：\\n 表示换行。n 的意思是 newline")]),t._v(" "),a("p",[t._v("1个字符：1个中文，1个英文，1个标点符号，1个空格")]),t._v(" "),a("p",[a("strong",[t._v("字符串拼接")]),t._v("：ES6 模板字符串（模板字面量），可使用变量，表达式，函数，嵌套等")]),t._v(" "),a("p",[a("strong",[t._v("不可变性")]),t._v("：值改变了，其实是地址变了，内存中新开辟了一个内存空间")]),t._v(" "),a("h4",{attrs:{id:"数值型-number"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数值型-number"}},[t._v("#")]),t._v(" # 数值型：Number")]),t._v(" "),a("p",[a("strong",[t._v("Infinity")]),t._v("：变量超过了最大值。typeof Infinity 返回结果是number")]),t._v(" "),a("p",[a("strong",[t._v("NaN")]),t._v("：Not a Number，非数值。typeof NaN 返回结果是 number")]),t._v(" "),a("p",[a("strong",[t._v("隐式转换")]),t._v("："),a("code",[t._v("-")]),t._v("、"),a("code",[t._v("*")]),t._v("、"),a("code",[t._v("/")]),t._v("、"),a("code",[t._v("%")]),t._v("这几个符号会自动进行隐式转换；")]),t._v(" "),a("p",[a("code",[t._v("+")]),t._v(" 如果加号两边都是 Number 类型，此时是数字相加。否则，就是连字符（用来连接字符串）")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"21"')]),t._v("  \n\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n")])])]),a("p",[a("strong",[t._v("浮点数运算")]),t._v("：会有精度问题，"),a("code",[t._v("toFix()")]),t._v(" 进行小数的截取，计算开源库：Math.js，decimal.js")]),t._v(" "),a("h4",{attrs:{id:"null-空对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#null-空对象"}},[t._v("#")]),t._v(" # Null：空对象")]),t._v(" "),a("p",[t._v("Null 类型的值只有一个，就是 null")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myObj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncosole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" myObj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印结果：object，null 代表的是空对象")]),t._v("\n")])])]),a("h4",{attrs:{id:"undefined-未定义"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#undefined-未定义"}},[t._v("#")]),t._v(" # Undefined：未定义")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("变量已声明，未赋值时")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印结果：undefined")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印结果：undefined")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("变量未声明（未定义）时")])]),t._v(" "),a("li",[a("p",[t._v("函数无返回值时")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 打印结果：undefined")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("调用函数时，未传参")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用函数时，未传参。执行函数后的打印结果：undefined")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("任何数据类型和 undefined 运算都是 NaN")])]),t._v(" "),a("li",[a("p",[t._v("任何值和 null 运算，null 可看做 0 运算")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("NaN")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//NaN")]),t._v("\n")])])])])]),t._v(" "),a("h4",{attrs:{id:"数据类型转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数据类型转换"}},[t._v("#")]),t._v(" # 数据类型转换")]),t._v(" "),a("p",[a("strong",[t._v("typeof 运算符")]),t._v("：获取变量的数据类型")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("显示类型转换")]),t._v(" "),a("p",[t._v("toString()、String()、Number()、parseInt(string)、parseFloat(string)、Boolean()")])]),t._v(" "),a("li",[a("p",[t._v("隐式类型")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("isNaN()")])]),t._v(" "),a("li",[a("p",[t._v("自增/自减运算符："),a("code",[t._v("++")]),t._v("、"),a("code",[t._v("—-")])])]),t._v(" "),a("li",[a("p",[t._v("正号/负号："),a("code",[t._v("+a")]),t._v("、"),a("code",[t._v("-a")])])]),t._v(" "),a("li",[a("p",[t._v("加号："),a("code",[t._v("+")])])]),t._v(" "),a("li",[a("p",[t._v("运算符："),a("code",[t._v("-")]),t._v("、"),a("code",[t._v("*")]),t._v("、"),a("code",[t._v("/")])])])])]),t._v(" "),a("li",[a("p",[t._v("隐式类型转换（特殊）")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("逻辑运算符："),a("code",[t._v("&&")]),t._v("、"),a("code",[t._v("||")]),t._v("、"),a("code",[t._v("！")])])]),t._v(" "),a("li",[a("p",[t._v("关系运算符："),a("code",[t._v("<")]),t._v("、"),a("code",[t._v(">")]),t._v("、"),a("code",[t._v("<=")]),t._v("、"),a("code",[t._v(">=")]),t._v("等")])])])])]),t._v(" "),a("h3",{attrs:{id:"声明-赋值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#声明-赋值"}},[t._v("#")]),t._v(" 声明 & 赋值")]),t._v(" "),a("p",[a("strong",[t._v("定义")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ES5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ES6")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 定义常量")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("赋值 & 初始化")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ES5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ES6")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("B")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" hello"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" world"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])])]),a("p",[a("strong",[t._v("声明多个变量")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'测试'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("27")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" number "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("命名规范")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("由字母、数字、下划线( _ )、美元符( $ )组成，不能以数字开头，不允许出现空格")])]),t._v(" "),a("li",[a("p",[t._v("不用使用 JS 语言中保留的「关键字」和「保留字」作为变量名")])]),t._v(" "),a("li",[a("p",[t._v("变量名区分大小写，长度不能超过255个字符，建议用驼峰命名规则")])])]),t._v(" "),a("h2",{attrs:{id:"运算符"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运算符"}},[t._v("#")]),t._v(" 运算符")]),t._v(" "),a("p",[t._v("定义：也叫操作符，是一种符号。通过运算符可以对一个或多个值进行运算，并获取运算结果")]),t._v(" "),a("p",[t._v("表达式：由数字、运算符、变量的组合（组成的式子）")]),t._v(" "),a("h3",{attrs:{id:"分类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分类"}},[t._v("#")]),t._v(" 分类")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("算数运算符：执行两个变量或值的算术运算")])]),t._v(" "),a("li",[a("p",[t._v("自增/自减运算符")])]),t._v(" "),a("li",[a("p",[t._v("一元运算符：typeof、正号 +、负号 -")])]),t._v(" "),a("li",[a("p",[t._v("逻辑运算符：&&、||、！")]),t._v(" "),a("p",[t._v("非布尔值进行与或运算时，会先将其转换为布尔值，然后再运算，但返回结果是原值")])]),t._v(" "),a("li",[a("p",[t._v("赋值运算符")])]),t._v(" "),a("li",[a("p",[t._v("比较运算符")])]),t._v(" "),a("li",[a("p",[t._v("三元运算符（条件运算符）")])])]),t._v(" "),a("h3",{attrs:{id:"js比较"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js比较"}},[t._v("#")]),t._v(" JS比较")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("基本类型（string,number）")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("不同类型，==：转同一类型，进行“值”比较；===：false")])]),t._v(" "),a("li",[a("p",[t._v("同类型，进行“值”比较")])])])]),t._v(" "),a("li",[a("p",[t._v("高级类型（Array,Object）")]),t._v(" "),a("ul",[a("li",[t._v("== 和 === 是没有区别的，进行“指针地址”比较")])])]),t._v(" "),a("li",[a("p",[t._v("基础类型与高级类型")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("==：将高级转化为基础类型，进行“值”比较")])]),t._v(" "),a("li",[a("p",[t._v("===：false")])])])])]),t._v(" "),a("h3",{attrs:{id:"隐式转换"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#隐式转换"}},[t._v("#")]),t._v(" 隐式转换")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[a("code",[t._v("+")])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("字符串连接符（加号任一边为字符串）：其他数据调用String()")])]),t._v(" "),a("li",[a("p",[t._v("算术运算符：其他数据调用Number()")])])])]),t._v(" "),a("li",[a("p",[t._v("关系运算符：数据类型转换成number之后再比较（一边字符串：Number()；两边都是字符串：对应unicode编码转数字）")])]),t._v(" "),a("li",[a("p",[t._v("复杂数据类型在隐式转换时会先转成String，然后再转成Number运算")])]),t._v(" "),a("li",[a("p",[t._v("逻辑非隐式转换与关系运算符隐式转换搞混淆")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("关系运算符：数据转数字")])]),t._v(" "),a("li",[a("p",[t._v("逻辑非：数据调用Boolean()")])])])])]),t._v(" "),a("h2",{attrs:{id:"流程控制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#流程控制"}},[t._v("#")]),t._v(" 流程控制")]),t._v(" "),a("h3",{attrs:{id:"选择"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#选择"}},[t._v("#")]),t._v(" 选择")]),t._v(" "),a("p",[t._v("if、swicth")]),t._v(" "),a("h3",{attrs:{id:"循环"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#循环"}},[t._v("#")]),t._v(" 循环")]),t._v(" "),a("p",[t._v("for、while")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[t._v("```js\nfor(①初始化表达式; ②条件表达式; ④更新表达式){\n    ③语句...\n} // 1 -> 2 -> (3->4->2)/结束\n```\n")])])]),a("p",[a("strong",[t._v("break")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("退出 switch 或退出整个循环")])]),t._v(" "),a("li",[a("p",[t._v("立即终止离它最近的那个循环语句")])]),t._v(" "),a("li",[a("p",[t._v("结束指定的循环，可以为循环语句创建一个 label 标签，来标识当前的循环，格式（label:循环语句）")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("outer"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'外层循环 i 的值：'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("break")]),t._v(" outer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 直接跳出outer所在的外层循环（这个outer是我自定义的label）")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'内层循环 j 的值:'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 外层循环 i 的值：0")]),t._v("\n")])])])])]),t._v(" "),a("p",[a("strong",[t._v("continue")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("跳过当次循环，继续下一次循环")])]),t._v(" "),a("li",[a("p",[t._v("作用于最近的循环")])]),t._v(" "),a("li",[a("p",[t._v("跳过指定的当次循环，可以使用 label 标签")])])]),t._v(" "),a("h2",{attrs:{id:"对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象"}},[t._v("#")]),t._v(" 对象")]),t._v(" "),a("h3",{attrs:{id:"概念-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念-2"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),a("p",[t._v("对象是一组无序的相关"),a("strong",[t._v("属性")]),t._v("和"),a("strong",[t._v("方法")]),t._v("的集合，用来"),a("strong",[t._v("封装信息")]),t._v("，具有特征（属性）和行为（方法）")]),t._v(" "),a("h3",{attrs:{id:"分类-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分类-2"}},[t._v("#")]),t._v(" 分类")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("内置对象：ES标准中定义的对象。Object、Math、Date、String、Boolean、Function等")])]),t._v(" "),a("li",[a("p",[t._v("宿主对象：由JS的运行环境提供的对象，主要指由浏览器提供的对象。BOM、DOM（console、document）")])]),t._v(" "),a("li",[a("p",[t._v("自定义对象：通过 new 关键字创建出来的对象实例。")])])]),t._v(" "),a("h3",{attrs:{id:"包装类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#包装类型"}},[t._v("#")]),t._v(" 包装类型")]),t._v(" "),a("p",[t._v("将"),a("strong",[t._v("基本数据类型")]),t._v("的数据转换为对应类型"),a("strong",[t._v("对象")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("String()")])]),t._v(" "),a("li",[a("p",[t._v("Number()")])]),t._v(" "),a("li",[a("p",[t._v("Boolean()")])])]),t._v(" "),a("h3",{attrs:{id:"创建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建"}},[t._v("#")]),t._v(" 创建")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("字面量")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'测试'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("工厂模式 new Object()")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'测试'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("构造函数")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//利用构造函数自定义对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Student")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'测试'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("sayHi")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建一个构造函数")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Student")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// this指的是当前对象实例【重要】")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("sayHi")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'厉害了'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"基本操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#基本操作"}},[t._v("#")]),t._v(" 基本操作")]),t._v(" "),a("p",[a("strong",[t._v("添加属性")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("对象"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("属性名 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 属性值"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("获取属性")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("对象"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("属性名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("可以使用"),a("code",[t._v("[]")]),t._v("这种形式去操作属性，"),a("code",[t._v("[]")]),t._v("中直接传递一个变量。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意，括号里的属性名，必须要加引号")]),t._v("\n对象"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'属性名'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" 属性值"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[a("strong",[t._v("删除属性")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组"}},[t._v("#")]),t._v(" 数组")]),t._v(" "),a("p",[t._v("数组是属于内置对象")]),t._v(" "),a("h3",{attrs:{id:"创建-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建-2"}},[t._v("#")]),t._v(" 创建")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("字面量")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" arr2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建带初始值的数组")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("构造函数")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Array")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("参数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 参数为空：创建一个空数组")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 参数为一个数值：表示数组的长度")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 多个参数：表示数组中的元素")]),t._v("\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"数组的类型相关方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组的类型相关方法"}},[t._v("#")]),t._v(" 数组的类型相关方法")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("方法")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("备注")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Array.isArray()")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("判断是否为数组")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("toString()")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("将数组转换为字符串")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Array.from(arrayLike)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("将"),a("strong",[t._v("伪数组")]),t._v("转化为"),a("strong",[t._v("真数组")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("ES6")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("Array.of(value1, value2, value3)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("创建数组：将"),a("strong",[t._v("一系列值")]),t._v("转换成数组")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})])])]),t._v(" "),a("p",[t._v("注意，获取数组的长度是用"),a("code",[t._v("length")]),t._v("属性，不是方法")]),t._v(" "),a("h3",{attrs:{id:"数组元素的添加和删除"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组元素的添加和删除"}},[t._v("#")]),t._v(" 数组元素的添加和删除")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("方法")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("备注")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("push()")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("向数组的"),a("strong",[t._v("最后面")]),t._v("插入一个或多个元素，返回结果为新数组的"),a("strong",[t._v("长度")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("会改变原数组")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("unshift()")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("在数组"),a("strong",[t._v("最前面")]),t._v("插入一个或多个元素，返回结果为新数组的"),a("strong",[t._v("长度")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("会改变原数组")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("pop()")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("删除数组中的"),a("strong",[t._v("最后一个")]),t._v("元素，返回结果为"),a("strong",[t._v("被删除的元素")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("会改变原数组")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("shift()")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("删除数组中的"),a("strong",[t._v("第一个")]),t._v("元素，返回结果为"),a("strong",[t._v("被删除的元素")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("会改变原数组")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("splice()")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("从数组中"),a("strong",[t._v("删除")]),t._v("指定的一个或多个元素，返回结果为"),a("strong",[t._v("被删除元素组成的新数组")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("会改变原数组")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("slice()")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("从数组中"),a("strong",[t._v("提取")]),t._v("指定的一个或多个元素，返回结果为"),a("strong",[t._v("新的数组")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("不会改变原数组")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("fill()")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("填充数组：用固定的值填充数组，返回结果为"),a("strong",[t._v("新的数组")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("不会改变原数组")])])])]),t._v(" "),a("h3",{attrs:{id:"数组的合并和拆分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组的合并和拆分"}},[t._v("#")]),t._v(" 数组的合并和拆分")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("方法")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("备注")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("concat()")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("合并数组：连接两个或多个数组，返回结果为"),a("strong",[t._v("新的数组")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("不会改变原数组")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("join()")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("将数组转换为字符串，返回结果为"),a("strong",[t._v("转换后的字符串")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("不会改变原数组")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("split()")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("将字符串按照指定的分隔符，组装为数组")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("不会改变原字符串")])])])]),t._v(" "),a("p",[t._v("注意，"),a("code",[t._v("split()")]),t._v("是字符串的方法，不是数组的方法。")]),t._v(" "),a("h3",{attrs:{id:"数组排序"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#数组排序"}},[t._v("#")]),t._v(" 数组排序")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("方法")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("备注")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("reverse()")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("反转数组，返回结果为"),a("strong",[t._v("反转后的数组")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("会改变原数组")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("sort()")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("对数组的元素,默认按照"),a("strong",[t._v("Unicode 编码")]),t._v("，从小到大进行排序")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("会改变原数组")])])])]),t._v(" "),a("h3",{attrs:{id:"查找数组的元素"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查找数组的元素"}},[t._v("#")]),t._v(" 查找数组的元素")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("方法")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("备注")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("indexOf(value)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("从前往后索引，检索一个数组中是否含有指定的元素")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("lastIndexOf(value)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("从后往前索引，检索一个数组中是否含有指定的元素")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("includes(item)")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("数组中是否包含指定的内容")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("find(function())")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("找出"),a("strong",[t._v("第一个")]),t._v("满足「指定条件返回 true」的元素")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("findIndex(function())")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("找出"),a("strong",[t._v("第一个")]),t._v("满足「指定条件返回 true」的元素的 index")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("every()")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("确保数组中的每个元素都满足「指定条件返回 true」，则停止遍历，此方法才返回 true")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("全真才为真。要求每一项都返回 true，最终的结果才返回 true")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("some()")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("数组中只要有一个元素满足「指定条件返回 true」，则停止遍历，此方法就返回 true")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("一真即真。只要有一项返回 true，最终的结果就返回 true")])])])]),t._v(" "),a("h3",{attrs:{id:"遍历数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#遍历数组"}},[t._v("#")]),t._v(" 遍历数组")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"left"}},[t._v("方法")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("描述")]),t._v(" "),a("th",{staticStyle:{"text-align":"left"}},[t._v("备注")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("for 循环")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("这个大家都懂")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("forEach()")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("和 for 循环类似，但需要兼容 IE8 以上")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("forEach() 没有返回值。也就是说，它的返回值是 undefined")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("map()")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("对原数组中的每一项进行加工，将组成新的数组")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("不会改变原数组")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("filter()")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("过滤数组：返回结果是 true 的项，将组成新的数组，返回结果为"),a("strong",[t._v("新的数组")])]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("不会改变原数组")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"left"}},[t._v("reduce")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}},[t._v("接收一个函数作为累加器，返回值是回调函数累计处理的结果")]),t._v(" "),a("td",{staticStyle:{"text-align":"left"}})])])]),t._v(" "),a("h3",{attrs:{id:"tips"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tips"}},[t._v("#")]),t._v(" Tips")]),t._v(" "),a("p",[t._v("总结：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("只遍历数组，用forEach()方法")])]),t._v(" "),a("li",[a("p",[t._v("在遍历同时，需改变元素内容，最好是用map()方法来做，避免出现一些低级错误")])])]),t._v(" "),a("p",[a("strong",[t._v("forEach(item, index, arr)")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("元素是"),a("strong",[t._v("基本")]),t._v("数据类型 - "),a("strong",[t._v("无法改变")]),t._v("原数组")])]),t._v(" "),a("li",[a("p",[t._v("元素是"),a("strong",[t._v("引用")]),t._v("数据类型")]),t._v(" "),a("ul",[a("li",[t._v("修改"),a("strong",[t._v("整个元素")]),t._v("对象时 - "),a("strong",[t._v("无法改变")]),t._v("原数组")]),t._v(" "),a("li",[t._v("修改元素对象里的"),a("strong",[t._v("某个属性")]),t._v("时 - "),a("strong",[t._v("可以改变")]),t._v("原数组")])])]),t._v(" "),a("li",[a("p",[t._v("通过 arr[index] "),a("strong",[t._v("修改原数组")]),t._v(" （标准做法）")])])]),t._v(" "),a("p",[a("strong",[t._v("map(item, index, arr)")])]),t._v(" "),a("p",[t._v("对数组中每一项运行"),a("strong",[t._v("回调函数")]),t._v("，返回函数结果，组成新数组（返回加工后的"),a("strong",[t._v("新数组")]),t._v("），"),a("strong",[t._v("不会改变")]),t._v("原数组")]),t._v(" "),a("p",[a("strong",[t._v("filter(item, index, arr)")])]),t._v(" "),a("p",[t._v("对数组中的每一项运行"),a("strong",[t._v("回调函数")]),t._v("，该函数结果是true的项，组成新的数组（返回值就是"),a("strong",[t._v("新数组")]),t._v("），"),a("strong",[t._v("不会改变")]),t._v("原数组。")]),t._v(" "),a("h2",{attrs:{id:"函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[t._v("#")]),t._v(" 函数")]),t._v(" "),a("p",[t._v("函数：将一些功能或语句进行"),a("strong",[t._v("封装")]),t._v("，也是一个"),a("strong",[t._v("对象")]),t._v("，typeof 返回function")]),t._v(" "),a("p",[t._v("作用：简化编程，让编程模块化。高内聚、低耦合")]),t._v(" "),a("h3",{attrs:{id:"定义-声明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#定义-声明"}},[t._v("#")]),t._v(" 定义 & 声明")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("命名函数（函数关键字）")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("函数名")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("形参"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("形参"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("形参"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("N")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n    语句"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 函数名：字母、数字、下划线、美元符号，不能以数字开头。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 参数：可选")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("匿名函数（函数表达式）")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("变量名")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("形参"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("形参"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("形参"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("N")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    语句"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("构造函数 new Function()")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" 变量名"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("函数名  "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'形参1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'形参2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'函数体'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])]),t._v(" "),a("p",[t._v("总结：所有的函数，都是 Fuction 的“实例”（或者说是“实例对象”）。本质上都是通过 new Function 得到的，函数也属于“对象”")]),t._v(" "),a("h3",{attrs:{id:"调用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#调用"}},[t._v("#")]),t._v(" 调用")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("普通函数调用")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("函数名()")])]),t._v(" "),a("li",[a("p",[t._v("函数名.call()")])])])]),t._v(" "),a("li",[a("p",[t._v("通过对象的方法来调用")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'测试'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("fn2")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我是对象的方法'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用函数")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("立即执行函数（在定义后，会自动调用）")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我是立即执行函数'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("通过构造函数来调用")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Fun3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'我是构造函数'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Fun3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("绑定事件函数")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" btn "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" document"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getElementById")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'btn'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 绑定事件")]),t._v("\nbtn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("onclick")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'点击按钮后，要做的事情'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("定时器函数")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setInterval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    num "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("num"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])]),t._v(" "),a("h3",{attrs:{id:"返回值"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#返回值"}},[t._v("#")]),t._v(" 返回值")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("结束方法（终止函数）")])]),t._v(" "),a("li",[a("p",[t._v("return; 和 无return，相当于返回undefined")])]),t._v(" "),a("li",[a("p",[t._v("返回值可以任意数据类型，对象 或 函数，多个值逗号隔开，仅取最后一个值")])])]),t._v(" "),a("h3",{attrs:{id:"函数名-函数体-函数加载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数名-函数体-函数加载"}},[t._v("#")]),t._v(" 函数名 & 函数体 & 函数加载")]),t._v(" "),a("p",[a("strong",[t._v("函数名 == 整个函数")])]),t._v(" "),a("p",[t._v("JS加载：只加载函数名，不加载函数体。使用内部的成员变量，需要调用函数")]),t._v(" "),a("p",[t._v("fn() 和 fn 的区别：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("fn()：调用函数，并获取函数的返回值")])]),t._v(" "),a("li",[a("p",[t._v("fn：函数对象，直接获取整个函数对象")])])]),t._v(" "),a("h3",{attrs:{id:"方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#方法"}},[t._v("#")]),t._v(" 方法")]),t._v(" "),a("p",[t._v("一个函数是作为一个对象的属性保存，则称函数是这个对象的方法")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用函数")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用方法")]),t._v("\n")])])]),a("h3",{attrs:{id:"类数组-arguments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类数组-arguments"}},[t._v("#")]),t._v(" 类数组 arguments")]),t._v(" "),a("p",[t._v("调用函数时，浏览器每次都会传递进两个隐含的参数：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("函数的上下文对象 this")])]),t._v(" "),a("li",[a("p",[t._v("封装"),a("strong",[t._v("实参")]),t._v("的对象 arguments")])])]),t._v(" "),a("h2",{attrs:{id:"作用域和变量提升"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作用域和变量提升"}},[t._v("#")]),t._v(" 作用域和变量提升")]),t._v(" "),a("h3",{attrs:{id:"作用域-scope"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#作用域-scope"}},[t._v("#")]),t._v(" 作用域 scope")]),t._v(" "),a("p",[t._v("一个变量或函数的作用范围，在函数定义时，就已经确定，为了提高程序的可靠性，同时减少命名冲突")]),t._v(" "),a("h4",{attrs:{id:"分类-es6-之前"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分类-es6-之前"}},[t._v("#")]),t._v(" 分类（ES6 之前）")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("全局作用域：作用于整个 script 标签内部，或者作用域一个独立的 JS 文件")])]),t._v(" "),a("li",[a("p",[t._v("函数作用域（局部作用域）：作用于函数内的代码环境")])])]),t._v(" "),a("h2",{attrs:{id:"this"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#this"}},[t._v("#")]),t._v(" this")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("以"),a("strong",[t._v("函数")]),t._v("的形式（包括普通函数、定时器函数、立即执行函数）调用时，this 的指向永远都是 window。比如fun();相当于window.fun();")])]),t._v(" "),a("li",[a("p",[t._v("以"),a("strong",[t._v("方法")]),t._v("的形式调用时，this 指向调用方法的那个对象")])]),t._v(" "),a("li",[a("p",[t._v("以"),a("strong",[t._v("构造函数")]),t._v("的形式调用时，this 指向实例对象")])]),t._v(" "),a("li",[a("p",[t._v("以"),a("strong",[t._v("事件绑定函数")]),t._v("的形式调用时，this 指向绑定事件的对象")])]),t._v(" "),a("li",[a("p",[t._v("使用 "),a("strong",[t._v("call 和 apply")]),t._v(" 调用时，this 指向指定的那个对象")])])]),t._v(" "),a("p",[a("strong",[t._v("箭头函数中 this指向")]),t._v(" 不会使用上面的准则，而会继承外层函数调用的 this 绑定（无论 this 绑定到什么）")]),t._v(" "),a("p",[a("strong",[t._v("改变函数内部的 this指向")]),t._v(" JS 专门为我们提供了一些方法来改变函数内部的 this 指向。call()、apply()、bind() 方法")]),t._v(" "),a("h3",{attrs:{id:"call"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#call"}},[t._v("#")]),t._v(" call()")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("可以调用一个函数，同时还可以改变这个函数内部的 this 指向")])]),t._v(" "),a("li",[a("p",[t._v("可以实现继承")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" 想要将"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("指向哪里"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 函数实参"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 函数实参"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"apply"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#apply"}},[t._v("#")]),t._v(" apply()")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("可以调用一个函数，同时还可以改变这个函数内部的 this 指向")])]),t._v(" "),a("li",[a("p",[t._v("传递数组")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fn1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" 想要将"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),t._v("指向哪里"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("函数实参"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 函数实参"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"bind"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bind"}},[t._v("#")]),t._v(" bind()")]),t._v(" "),a("ul",[a("li",[t._v("不会调用函数，但可以改变函数内部的 this 指向")])]),t._v(" "),a("h2",{attrs:{id:"闭包"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#闭包"}},[t._v("#")]),t._v(" 闭包")]),t._v(" "),a("h3",{attrs:{id:"概念-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#概念-3"}},[t._v("#")]),t._v(" 概念")]),t._v(" "),a("p",[t._v("指有权访问另一个函数作用域中变量的函数")])])}),[],!1,null,null,null);s.default=e.exports}}]);